Note for 10/2/19
Menu:
Each column has its own class such as MenuFile, MenuEdit, etc.

getAccessibleContext().setAccessibleDescription() is called on each JMenuItem inside each class

Toolbar
Same as Menu, each column/icon has its own class such as PokeTool, EditTool, etc.

Each class inherits the Tool abstract class that also implements AttributeDefaultProvider

Tool is not a JComponent 

Tool.properties is the place where actual tooltips and names are assigned

In function getToolTip() inside the ToolItem (this is inside class LayoutToolBarModel class), ret value is where tooltips are displayed. I changed it to make it display the name, and the content of the tooltip becomes the name.

getToolTip() is called on a ToolBarItem item in the function of getToolTipText in the class ToolbarButton (a JComponent). Here it seems like the message is passed upon to java accessibility

Inside Icons class, there is the method of getIcon that returns an ImageIcon (accessible). This method seems like it is defining the shape and colour of the icon 

getIcon() mentioned above is called on an Interface Icon (not Icons), which is NOT JComponent. Here is an example: private static final Icon toolIcon = Icons.getIcon(“poke.gif") (this is inside the PokeTool class)

Misc
Ctrl-1/2/3/4/5/6/7 is how you use keyboard shortcut to navigate the icons in toolbar. (I had narrator on previously so it was a bit messed up)

At the menu bar, I modified some code so that there is tooltip (LogisimMenuBar.java)

Walk through the menu columns using alt + _ / arrow key (need a starting pt). 

Walk through the elements inside menu using arrow key / alt + _ 

LHS middle column (where you find Wiring, Gates, Plexers … ) hover on them and they will be read out

LHS lower column using arrow key and navigate the cells (starting pt needed). Info will be read out.

10/9/19

There exists a MouseOption class where actions will be performed once mouse is clicked or pressed

Inside the class MouseOption, the variable curTool is a Tool interface that does not implement Accessibility 

I extended JComponents on Abstract class Tools and implemented Accessible interface.

Results: non-fatal, yet still it does not read out when key is pressed. 

Assumption: Tool class might just control the object but not the actual icon. 

Testing result: fatal, /Users/Jason/Desktop/Computer Science/Lectures/Independent Study /accessiblecircuitsdesign/src/main/java/com/cburch/logisim/tools/AddTool.java:242: error: getBounds() in AddTool cannot override getBounds() in Component
        private Bounds getBounds() {

Fixed the conflict by modifying the name of the function. (-> addBoundsTool)

I extended JComponents for Icons class and implemented Accessible interface. 

Result: Non-fatal. Logisim test required. 

Circuits:

Under EditTool class we found SelectTool item, a Tool that does not appear on the GUI.

We want to create methods such that pressing key will result only in selection but not action.

We would like to mimic the LogisimMenuBar class where the method setMnemonic is called on JMenuItem

The method setMnemonic needs to be implemented only on classes that extend AbstractButton.

Objects that use setMnemonic is declared and called in the parent class. For example, each component in the MenuFile, MenuEdit,... is called in the MenuFile, MenuEdit. MenuFile and MenuEdit etc. are called in the LogisimMenuBar class. 

However, there is no such thing as LogisimToolBar class. A problem.

Some of tools cannot be simply initialized without parameters. editTool needs SelectTool select, WiringTool wiring as its parameters. 

Ctrl - F2 

Created new file src/main/java/com/cburch/logisim/gui/main/LogisimToolbar.java to mimic the behaviour of Menubar in order to make Tools more accessible.

Currently working on finding where logisimMenubar is being called so that I can call LogisimToolbar 

Frame, Toolbar might also be the places to insert accessibility context.
